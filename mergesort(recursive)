package sorting;

import java.util.Arrays;

public class merge {
    public static void main(String[] args) {
        int[] arr = {5,4,3,2,1};
        arr = mergeSort(arr);
        System.out.println(Arrays.toString(arr));

    }
    static int[] mergeSort(int[] arr){
    // checking the base condition ..
    // if the length of the array hits 1 then it means that array is in sorted form after that..
    // we are going to merge the sorted array..
        if(arr.length == 1){
            return arr;
        }
        int mid = arr.length/2;
        // calling the recursion function .. to merging the array..
        int[] left = mergeSort(Arrays.copyOfRange(arr,0,mid));
        int[] right= mergeSort(Arrays.copyOfRange(arr,mid,arr.length));
        return Merge(left,right);

    }
    static int[] Merge(int[] first , int[] second){
        int i = 0;
        int j = 0;
        int k = 0;
        int[] mix = new int[first.length+ second.length];
        // merging the to array ..
        while(i< first.length && j< second.length){
            if(first[i] < second[j]){
                mix[k] = first[i];
                i++;
            }
            else{
                mix[k] = second[j];
                j++;
            }
            k++;
        }
        while(i< first.length){
            mix[k] = first[i];
            i++;
            k++;
        }
        while(j< second.length){
            mix[k] = second[j];
            j++;
            k++;
        }
        return mix;
    }
}
